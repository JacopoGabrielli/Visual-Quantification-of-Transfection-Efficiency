{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. cut_images.py (cuts the sub-panels) \
2. make_coco_annotations.py (makes the annotation file for the cut images)\
3. scale images.py (increases the contrast and other pre-elaborations) \
4. evaluate using detectron python detectron2-ResNeSt/tools/train_net.py - - config-file LIVECell/model/anchor_based/livecell_config.yaml - - eval-only MODEL.WEIGHTS /PATH_WEIGHTS/LIVECell_anchor_based_model.pth\
5. visualise_json_results.py (produces the output masks)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 6. check_results.py (segment nuclei and plasmids and determine the position of the latter)\
(combine images in a single one and make the graphs)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 7. read_results.py \
8. make_graph.py}